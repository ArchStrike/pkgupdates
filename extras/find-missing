#!/usr/bin/env python
import re
import pathlib

pkgupdates = pathlib.Path(__file__).resolve().parent.parent
archversion = pathlib.Path(pkgupdates, 'archversion.conf')
archpkg_re = re.compile(r'^\[(?P<package>(?!DEFAULT).*)\]', re.M)


def get_pkgrepo_packages():
    archstrike = pathlib.Path(pkgupdates, 'pkgrepo', 'archstrike')
    for pkgbuild in archstrike.glob('**/PKGBUILD'):
        yield pkgbuild.parts[-2]
    pending = pathlib.Path(pkgupdates, 'pkgrepo', 'pending')
    for pkgbuild in pending.glob('**/PKGBUILD'):
        yield pkgbuild.parts[-2]


def get_develversion_packages():
    develversion = pathlib.Path(pkgupdates, 'develversion.conf')
    with develversion.open() as fhandle:
        for pkgbuild in fhandle.readlines():
            yield pkgbuild.rstrip('\n')


def get_archversion_packages():
    archversion = pathlib.Path(pkgupdates, 'archversion.conf')
    with archversion.open() as fhandle:
        fcontent = fhandle.read()
    for match in archpkg_re.finditer(fcontent):
        yield match.group('package')


def get_noversion_packages():
    noversion = pathlib.Path(pkgupdates, 'noversion.txt')
    with noversion.open() as fhandle:
        fcontent = fhandle.read()
    for match in archpkg_re.finditer(fcontent):
        yield match.group('package')


def find_conf_deprecated(pkgrepo_packages, other_conf_packages, conf_packages, confname):
    deprecated_packages = sorted(conf_packages - pkgrepo_packages.union(other_conf_packages))
    if deprecated_packages:
        print(f"\033[91m# Deprecated packages from {confname}\033[0m")
        print("\n".join(deprecated_packages))


def find_conf_missing(pkgrepo_packages, all_conf_packages):
    missing_packages = sorted(pkgrepo_packages - all_conf_packages)
    if missing_packages:
        print("\033[91m# Missing packages\033[0m")
        print("\n".join(missing_packages))


if __name__ == "__main__":
    pkgrepo_packages = set([p for p in get_pkgrepo_packages()])
    develversion_packages = set([p for p in get_develversion_packages()])
    archversion_packages = set([p for p in get_archversion_packages()])
    noversion_packages = set([p for p in get_noversion_packages()])
    find_conf_deprecated(pkgrepo_packages, noversion_packages.union(archversion_packages),
                         develversion_packages, "develversion.conf")
    find_conf_deprecated(pkgrepo_packages, noversion_packages.union(develversion_packages),
                         archversion_packages, "archversion.conf")
    find_conf_deprecated(pkgrepo_packages, archversion_packages.union(develversion_packages),
                         noversion_packages, "noversion.txt")
    find_conf_missing(pkgrepo_packages, archversion_packages.union(develversion_packages).union(noversion_packages))
